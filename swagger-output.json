{
  "openapi": "3.0.0",
  "info": {
    "title": "University Aplication",
    "description": "Simple API overview",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "App default"
        ],
        "summary": "Default route of the app.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Default response for this route"
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Retrieve information about one course.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the course to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get sucessfully ONE Course from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Methods and algorithms of machine learning"
                    },
                    "credit_hours": {
                      "type": "number",
                      "example": 80
                    },
                    "professor_id": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Methods and algorithms of machine learning"
                    },
                    "credit_hours": {
                      "type": "number",
                      "example": 80
                    },
                    "professor_id": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, ID must be an integer larger than 0.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is no Course with the selected ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Course"
        ],
        "summary": "Update one course in the database.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the course to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course updated sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, middleware returns an array of error messages.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"credit_hours\" is required",
                        "\"professor_id\" is required"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"credit_hours\" is required",
                        "\"professor_id\" is required"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is an error in the input data, course ID to update not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database or validation error(name must be unique)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "credit_hours": {
                    "type": "integer"
                  },
                  "professor_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Course"
        ],
        "summary": "Delete one course in the database.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the course to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Course successfully deleted from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully deleted"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully deleted"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, ID must be an integer larger than 0.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is no Course with the selected ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/courses/": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Retrieve information about all courses.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get an array of ALL Courses from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Mobile communications"
                      },
                      "credit_hours": {
                        "type": "number",
                        "example": 88
                      },
                      "professor_id": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Mobile communications"
                      },
                      "credit_hours": {
                        "type": "number",
                        "example": 88
                      },
                      "professor_id": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is no data in the Course database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There is no data in the database"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There is no data in the database"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Create one course in the database.",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Course created sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 7
                      },
                      "name": {
                        "type": "string",
                        "example": "Test test test"
                      },
                      "credit_hours": {
                        "type": "number",
                        "example": 333
                      },
                      "professor_id": {
                        "type": "number",
                        "example": 2
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 7
                      },
                      "name": {
                        "type": "string",
                        "example": "Test test test"
                      },
                      "credit_hours": {
                        "type": "number",
                        "example": 333
                      },
                      "professor_id": {
                        "type": "number",
                        "example": 2
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, middleware returns an array of error messages.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"credit_hours\" is required",
                        "\"professor_id\" is required"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"credit_hours\" is required",
                        "\"professor_id\" is required"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database or validation error(name must be unique)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "credit_hours": {
                    "type": "integer"
                  },
                  "professor_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/enrollments/student/{id}": {
      "get": {
        "tags": [
          "Enrollment"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/enrollments/course/{id}": {
      "get": {
        "tags": [
          "Enrollment"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/enrollments/": {
      "get": {
        "tags": [
          "Enrollment"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all Enrollments from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "course_id": {
                        "type": "number",
                        "example": 1
                      },
                      "student_id": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "course_id": {
                        "type": "number",
                        "example": 1
                      },
                      "student_id": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Enrollment"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/enrollments/{firstId}/{secondId}": {
      "put": {
        "tags": [
          "Enrollment"
        ],
        "description": "",
        "parameters": [
          {
            "name": "firstId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Enrollment"
        ],
        "description": "",
        "parameters": [
          {
            "name": "firstId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/exams/{id}": {
      "get": {
        "tags": [
          "Exam"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Exam"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Exam"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/exams/": {
      "get": {
        "tags": [
          "Exam"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all Exams from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Physics exam"
                      },
                      "date_and_time": {
                        "type": "string",
                        "example": "2023-01-30T15:16:06.547Z"
                      },
                      "course_id": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Physics exam"
                      },
                      "date_and_time": {
                        "type": "string",
                        "example": "2023-01-30T15:16:06.547Z"
                      },
                      "course_id": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Exam"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/professors/{id}": {
      "get": {
        "tags": [
          "Professor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Professor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Professor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/professors/": {
      "get": {
        "tags": [
          "Professor"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all Professors from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "full_name": {
                        "type": "string",
                        "example": "Bilbo Baggins"
                      },
                      "email": {
                        "type": "string",
                        "example": "bilbobaggins@fesb.com"
                      },
                      "address": {
                        "type": "string",
                        "example": "Abbey Street 121, Dublin"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "234567"
                      },
                      "department_id": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "full_name": {
                        "type": "string",
                        "example": "Bilbo Baggins"
                      },
                      "email": {
                        "type": "string",
                        "example": "bilbobaggins@fesb.com"
                      },
                      "address": {
                        "type": "string",
                        "example": "Abbey Street 121, Dublin"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "234567"
                      },
                      "department_id": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Professor"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/professors/add-exam-results/{id}": {
      "post": {
        "tags": [
          "Professor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Student"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Student"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/students/": {
      "get": {
        "tags": [
          "Student"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all Students from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "full_name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "johndoe@fesb.com"
                      },
                      "address": {
                        "type": "string",
                        "example": "181 Mercer Street, New York"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "111222"
                      },
                      "major_id": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "full_name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "johndoe@fesb.com"
                      },
                      "address": {
                        "type": "string",
                        "example": "181 Mercer Street, New York"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "111222"
                      },
                      "major_id": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Student"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/students/own-results/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/majors/{id}": {
      "get": {
        "tags": [
          "Major"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Major"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Major"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/majors/": {
      "get": {
        "tags": [
          "Major"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all Majors from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Electrical Engineering and Information Technology"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Electrical Engineering and Information Technology"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Major"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve information about one Department.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Department to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get sucessfully ONE Department from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Department of Mathematics and Physics"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Department of Mathematics and Physics"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, ID must be an integer larger than 0.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is no Department with the selected ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Update one Department in the database.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Department to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department updated sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, middleware returns an error message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"name\" is required"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"name\" is required"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is an error in the input data, Department ID to update not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not updated"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database or validation error(name must be unique)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Delete one Department in the database.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Department to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Department successfully deleted from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully deleted"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item successfully deleted"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, ID must be an integer larger than 0.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"id\" must be greater than or equal to 1",
                        "\"id\" must be a number"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is no Department with the selected ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/departments/": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve information about all departments.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get an array of ALL Departments from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Department of Power Engineering"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Department of Power Engineering"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "There is no data in the Department database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There is no data in the database"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There is no data in the database"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "connect ECONNREFUSED localhost:DB_PORT"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Create one Department in the database.",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Department created sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 7
                      },
                      "name": {
                        "type": "string",
                        "example": "Test test test"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 7
                      },
                      "name": {
                        "type": "string",
                        "example": "Test test test"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-02-03T09:27:26.689Z"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There is an error in the input data, middleware returns an array of error messages.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"credit_hours\" is required",
                        "\"professor_id\" is required"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "example": [
                        "\"credit_hours\" is required",
                        "\"professor_id\" is required"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no connection to the database or validation error(name must be unique)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "content of the error message"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/results/student/{id}": {
      "get": {
        "tags": [
          "Result"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/results/exam/{id}": {
      "get": {
        "tags": [
          "Result"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/results/": {
      "get": {
        "tags": [
          "Result"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all Results from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "student_id": {
                        "type": "number",
                        "example": 3
                      },
                      "grade": {
                        "type": "number",
                        "example": 2
                      },
                      "exam_id": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "student_id": {
                        "type": "number",
                        "example": 3
                      },
                      "grade": {
                        "type": "number",
                        "example": 2
                      },
                      "exam_id": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Result"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/results/{firstId}/{secondId}": {
      "put": {
        "tags": [
          "Result"
        ],
        "description": "",
        "parameters": [
          {
            "name": "firstId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Result"
        ],
        "description": "",
        "parameters": [
          {
            "name": "firstId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secondId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}